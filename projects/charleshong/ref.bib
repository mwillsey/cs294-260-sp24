@article{nandi2021ruler,
  author = {Nandi, Chandrakana 
        and Willsey, Max 
        and Zhu, Amy 
        and Wang, Yisu Remy 
        and Saiki, Brett 
        and Anderson, Adam 
        and Schulz, Adriana 
        and Grossman, Dan 
        and Tatlock, Zachary},
  title = {Rewrite Rule Inference Using Equality Saturation},
  year = {2021},
  issue_date = {October 2021},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {5},
  number = {OOPSLA},
  url = {https://doi.org/10.1145/3485496},
  doi = {10.1145/3485496},
  journal = {Proc. ACM Program. Lang.},
  month = {oct},
  articleno = {119},
  numpages = {28},
  keywords = {Program Synthesis, Rewrite Rules, Equality Saturation}
}

@article{newcomb2020verifyinghalide,
author = {Newcomb, Julie L. and Adams, Andrew and Johnson, Steven and Bodik, Rastislav and Kamil, Shoaib},
title = {Verifying and improving Halide’s term rewriting system with program synthesis},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428234},
doi = {10.1145/3428234},
journal = {Proc. ACM Program. Lang.},
month = {nov},
articleno = {166},
numpages = {28},
keywords = {synthesis, term rewriting system, verification}
}

@inproceedings{yang2021tensat,
  title={Equality Saturation for Tensor Graph Superoptimization},
  author={Yichen Yang and Phitchaya Mangpo Phothilimtha and Yisu Remy Wang and Max Willsey and Sudip Roy and Jacques Pienaar},
  eprint={2101.01332},
  booktitle={Proceedings of Machine Learning and Systems},
  year={2021}
}

@InProceedings{notzli2019cvc4,
author="N{\"o}tzli, Andres
and Reynolds, Andrew
and Barbosa, Haniel
and Niemetz, Aina
and Preiner, Mathias
and Barrett, Clark
and Tinelli, Cesare",
editor="Janota, Mikol{\'a}{\v{s}}
and Lynce, In{\^e}s",
title="Syntax-Guided Rewrite Rule Enumeration for SMT Solvers",
booktitle="Theory and Applications of Satisfiability Testing -- SAT 2019",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="279--297",
isbn="978-3-030-24258-9"
}

@inproceedings{reynolds2019cvc4sy,
   author = {Andrew Reynolds and Haniel Barbosa and Andres N{\"o}tzli and
	Cesare Tinelli and Clark Barrett},
   editor = {Isil Dillig and Serdar Tasiran},
   title = {{CVC4SY}: Smart and Fast Term Enumeration for Syntax-Guided
	Synthesis},
   booktitle = {Proceedings of the 31st International Conference
	on Computer Aided Verification (CAV '19)},
   series = {Lecture Notes in Computer Science},
   volume = {11561},
   pages = {74--83},
   publisher = {Springer International Publishing},
   month = jul,
   year = {2019},
   isbn = {978-3-030-25542-8},
   doi = {10.1007/978-3-030-25543-5_5},
   note = {New York, New York},
   url = {http://theory.stanford.edu/~barrett/pubs/RBN+19.pdf}
}

@inbook{singher2021thesy,
   title={Theory Exploration Powered by Deductive Synthesis},
   ISBN={9783030816889},
   ISSN={1611-3349},
   url={http://dx.doi.org/10.1007/978-3-030-81688-9_6},
   DOI={10.1007/978-3-030-81688-9_6},
   booktitle={Lecture Notes in Computer Science},
   publisher={Springer International Publishing},
   author={Singher, Eytan and Itzhaky, Shachar},
   year={2021},
   pages={125–148} }

@article{pal2023enumo,
author = {Pal, Anjali and Saiki, Brett and Tjoa, Ryan and Richey, Cynthia and Zhu, Amy and Flatt, Oliver and Willsey, Max and Tatlock, Zachary and Nandi, Chandrakana},
title = {Equality Saturation Theory Exploration \`{a} la Carte},
year = {2023},
issue_date = {October 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {OOPSLA2},
url = {https://doi.org/10.1145/3622834},
doi = {10.1145/3622834},
journal = {Proc. ACM Program. Lang.},
month = {oct},
articleno = {258},
numpages = {29},
keywords = {Rewrite rules, equality saturation, program synthesis}
}

@inproceedings{peytonjones2001playing,
author = {Peyton Jones, Simon and Tolmach, Andrew and Hoare, Tony},
title = {Playing by the rules: rewriting as a practical optimisation technique in GHC},
organization = {ACM SIGPLAN},
booktitle = {2001 Haskell Workshop},
year = {2001},
month = {September},
url = {https://www.microsoft.com/en-us/research/publication/playing-by-the-rules-rewriting-as-a-practical-optimisation-technique-in-ghc/},
edition = {2001 Haskell Workshop},
}

@article{willsey2021egg,
author = {Willsey, Max and Nandi, Chandrakana and Wang, Yisu Remy and Flatt, Oliver and Tatlock, Zachary and Panchekha, Pavel},
title = {egg: Fast and extensible equality saturation},
year = {2021},
issue_date = {January 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {POPL},
url = {https://doi.org/10.1145/3434304},
doi = {10.1145/3434304},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {23},
numpages = {29},
keywords = {equality saturation, e-graphs}
}

@inproceedings{jrk2013halide,
author = {Ragan-Kelley, Jonathan and Barnes, Connelly and Adams, Andrew and Paris, Sylvain and Durand, Fr\'{e}do and Amarasinghe, Saman},
title = {Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines},
year = {2013},
isbn = {9781450320146},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2491956.2462176},
doi = {10.1145/2491956.2462176},
booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {519–530},
numpages = {12},
keywords = {autotuning, compiler, domain specific language, gpu, image processing, locality, optimization, parallelism, redundant computation, vectorization},
location = {Seattle, Washington, USA},
series = {PLDI '13}
}

@misc{yang2021tensat,
      title={Equality Saturation for Tensor Graph Superoptimization}, 
      author={Yichen Yang and Phitchaya Mangpo Phothilimtha and Yisu Remy Wang and Max Willsey and Sudip Roy and Jacques Pienaar},
      year={2021},
      eprint={2101.01332},
      archivePrefix={arXiv},
      primaryClass={cs.AI}
}

@misc{coward2023automating,
      title={Automating Constraint-Aware Datapath Optimization using E-Graphs}, 
      author={Samuel Coward and George A. Constantinides and Theo Drane},
      year={2023},
      eprint={2303.01839},
      archivePrefix={arXiv},
      primaryClass={cs.AR}
}

@incollection{knuth1970completion,
title = {Simple Word Problems in Universal Algebras},
editor = {JOHN LEECH},
booktitle = {Computational Problems in Abstract Algebra},
publisher = {Pergamon},
pages = {263-297},
year = {1970},
isbn = {978-0-08-012975-4},
doi = {https://doi.org/10.1016/B978-0-08-012975-4.50028-X},
url = {https://www.sciencedirect.com/science/article/pii/B978008012975450028X},
author = {Donald E. Knuth and Peter B. Bendix},
}

@article{huet1980complete,
title = {A complete proof of correctness of the Knuth-Bendix completion algorithm},
journal = {Journal of Computer and System Sciences},
volume = {23},
number = {1},
pages = {11-21},
year = {1981},
issn = {0022-0000},
doi = {https://doi.org/10.1016/0022-0000(81)90002-7},
url = {https://www.sciencedirect.com/science/article/pii/0022000081900027},
author = {Gérard Huet},
abstract = {We give in this paper a complete description of the Knuth-Bendix completion algorithm. We prove its correctness in full, isolating carefully the essential abstract notions, so that the proof may be extended to other versions and extensions of the basic algorithm. We show that it defines a semidecision algorithm for the validity problem in the equational theories for which it applies, yielding a decision procedure whenever the algorithm terminates.}
}

@InProceedings{solar2009sketching,
author="Solar-Lezama, Armando",
editor="Hu, Zhenjiang",
title="The Sketching Approach to Program Synthesis",
booktitle="Programming Languages and Systems",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="4--13",
abstract="Sketching is a new form of localized software synthesis that aims to bridge the gap between a programmer's high-level insights about a problem and the computer's ability to manage low-level details. In sketching, the programmer uses partial programs to describe the desired implementation strategy, and leaves the low-level details of the implementation to an automated synthesis procedure. This paper describes the sketching approach to program synthesis, including the details of the Sketch language and synthesizer. The paper will then describe some of the techniques that make synthesis from sketches possible, and will close with a brief discussion of open problems in programmer guided synthesis.",
isbn="978-3-642-10672-9"
}

@inproceedings{thomas2024isaria,
author = {Thomas, Samuel and Bornholt, James},
title = {Automatic Generation of Vectorizing Compilers for Customizable Digital Signal Processors},
year = {2024},
isbn = {9798400703720},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3617232.3624873},
doi = {10.1145/3617232.3624873},
booktitle = {Proceedings of the 29th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 1},
pages = {19–34},
numpages = {16},
keywords = {vectorization, DSPs, equality saturation, rewrite rules, program synthesis},
location = {La Jolla, CA, USA, },
series = {ASPLOS '24}
}

@inproceedings{vanhattum2021diospyros,
author = {VanHattum, Alexa and Nigam, Rachit and Lee, Vincent T. and Bornholt, James and Sampson, Adrian},
title = {Vectorization for digital signal processors via equality saturation},
year = {2021},
isbn = {9781450383172},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3445814.3446707},
doi = {10.1145/3445814.3446707},
booktitle = {Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {874–886},
numpages = {13},
keywords = {Vectorization, Program Synthesis, Equality Saturation, DSPs},
location = {Virtual, USA},
series = {ASPLOS '21}
}

@INPROCEEDINGS{alur2013sygus,

  author={Alur, Rajeev and Bodik, Rastislav and Juniwal, Garvit and Martin, Milo M. K. and Raghothaman, Mukund and Seshia, Sanjit A. and Singh, Rishabh and Solar-Lezama, Armando and Torlak, Emina and Udupa, Abhishek},

  booktitle={2013 Formal Methods in Computer-Aided Design}, 

  title={Syntax-guided synthesis}, 

  year={2013},

  volume={},

  number={},

  pages={1-8},

  keywords={Grammar;Syntactics;Heuristic algorithms;Concrete;Search problems;Libraries;Production},

  doi={10.1109/FMCAD.2013.6679385}}

@article{buchberger2000theorema,
author = {Buchberger, Bruno},
year = {2000},
month = {01},
pages = {9-32},
title = {Theory Exploration with Theorema},
volume = {XXXVIII},
journal = {Analele Universitatii Din Timisoara, Seria Matematica-Informatica}
}
@article{buchberger2006theorema,
title = {Theorema: Towards computer-aided mathematical theory exploration},
journal = {Journal of Applied Logic},
volume = {4},
number = {4},
pages = {470-504},
year = {2006},
note = {Towards Computer Aided Mathematics},
issn = {1570-8683},
doi = {https://doi.org/10.1016/j.jal.2005.10.006},
url = {https://www.sciencedirect.com/science/article/pii/S1570868305000716},
author = {Bruno Buchberger and Adrian Crǎciun and Tudor Jebelean and Laura Kovács and Temur Kutsia and Koji Nakagawa and Florina Piroi and Nikolaj Popov and Judit Robu and Markus Rosenkranz and Wolfgang Windsteiger},
keywords = {Mathematical assistant, Automated reasoning, Theory exploration, “Lazy Thinking”, Theorema},
}

@inproceedings{10.1145/2737924.2737959,
author = {Panchekha, Pavel and Sanchez-Stern, Alex and Wilcox, James R. and Tatlock, Zachary},
title = {Automatically improving accuracy for floating point expressions},
year = {2015},
isbn = {9781450334686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2737924.2737959},
doi = {10.1145/2737924.2737959},
abstract = {Scientific and engineering applications depend on floating point arithmetic to approximate real arithmetic. This approximation introduces rounding error, which can accumulate to produce unacceptable results. While the numerical methods literature provides techniques to mitigate rounding error, applying these techniques requires manually rearranging expressions and understanding the finer details of floating point arithmetic. We introduce Herbie, a tool which automatically discovers the rewrites experts perform to improve accuracy. Herbie's heuristic search estimates and localizes rounding error using sampled points (rather than static error analysis), applies a database of rules to generate improvements, takes series expansions, and combines improvements for different input regions. We evaluated Herbie on examples from a classic numerical methods textbook, and found that Herbie was able to improve accuracy on each example, some by up to 60 bits, while imposing a median performance overhead of 40\%. Colleagues in machine learning have used Herbie to significantly improve the results of a clustering algorithm, and a mathematical library has accepted two patches generated using Herbie.},
booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {1–11},
numpages = {11},
keywords = {Floating point, numerical accuracy, program rewriting},
location = {Portland, OR, USA},
series = {PLDI '15}
}

@article{panchekha2015herbie,
author = {Panchekha, Pavel and Sanchez-Stern, Alex and Wilcox, James R. and Tatlock, Zachary},
title = {Automatically improving accuracy for floating point expressions},
year = {2015},
issue_date = {June 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {50},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/2813885.2737959},
doi = {10.1145/2813885.2737959},
abstract = {Scientific and engineering applications depend on floating point arithmetic to approximate real arithmetic. This approximation introduces rounding error, which can accumulate to produce unacceptable results. While the numerical methods literature provides techniques to mitigate rounding error, applying these techniques requires manually rearranging expressions and understanding the finer details of floating point arithmetic. We introduce Herbie, a tool which automatically discovers the rewrites experts perform to improve accuracy. Herbie's heuristic search estimates and localizes rounding error using sampled points (rather than static error analysis), applies a database of rules to generate improvements, takes series expansions, and combines improvements for different input regions. We evaluated Herbie on examples from a classic numerical methods textbook, and found that Herbie was able to improve accuracy on each example, some by up to 60 bits, while imposing a median performance overhead of 40\%. Colleagues in machine learning have used Herbie to significantly improve the results of a clustering algorithm, and a mathematical library has accepted two patches generated using Herbie.},
journal = {SIGPLAN Not.},
month = {jun},
pages = {1–11},
numpages = {11},
keywords = {Floating point, numerical accuracy, program rewriting}
}

  